<style lang="less">
  @import (reference) "../../../config/variables";

  view.landingPage-recommendBlock {
    width: 100vw;
    border-bottom: 15rpx solid @faintWhite;

    & > .title {
      padding: 50rpx 0 40rpx;
      text-align: right;
    }

    .ellipsis {
      max-width: 100%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .content {
      width: calc(~"100vw - 40rpx");
      padding: 0 20rpx;
      display: flex;
      justify-content: flex-start;
      flex-wrap: wrap;

      .item {
        width: 216rpx;
        margin: 0 10rpx 50rpx;
        display: inline-flex;
        flex-direction: column;

        &.more {
          width: 214rpx;
          height: 214rpx;
          color: @textColor1;
          font-size: 28rpx;
          border: 2rpx solid @dimWhite;
          border-radius: 8rpx;
          overflow: hidden;
          flex-direction: column;
          align-items: center;
          justify-content: center;

          view {
            width: 100%;
            height: 10px;
            padding-top: 14rpx;
            display: inline-flex;
            justify-content: center;

            .dot {
              width: 8rpx;
              height: 8rpx;
              margin: 0 3rpx;
              padding: 0;
              border-radius: 50%;
              background-color: #A0A0A0;
            }
          }
        }

        .top {
          width: 216rpx;
          height: 216rpx;
          border: 2rpx solid @dimWhite;
          border-radius: 8rpx;
          overflow: hidden;

          image {
            width: 216rpx;
            height: 216rpx;
          }
        }

        .bottom {
          display: flex;
          flex-direction: column;

          .title {
            padding: 18rpx 0;
            color: @textColor1;
            font-size: 24rpx;
          }

          .price {
            display: flex;
            align-items: baseline;

            view:first-of-type {
              font-size: 24rpx;
              color: @primaryColor;
            }

            view:last-of-type {
              padding-left: 6rpx;
              font-size: 22rpx;
              color: @textColor5;
              text-decoration: line-through;
            }
          }
        }
      }
    }
  }
</style>

<template>
  <view
    wx:if="{{product && product.length}}"
    class="landingPage-recommendBlock">
    <!--标题-->
    <view class="title">
      <title
        title="热门推荐"
        icon="../../assets/img/explore/hot.png"></title>
    </view>

    <!--内容-->
    <view class="content">
      <view
        class="item"
        wx:key="id"
        wx:for="{{_product}}"
        @tap="bindGetDetail({{item.url}})">
        <view class="top">
          <image src="{{item._image + '?imageView2/2/w/216'}}"></image>
        </view>
        <view class="bottom">
          <view class="title ellipsis">{{item.name}}</view>
          <view class="price">
            <view>￥{{item._sellPrice}}</view>
            <view>￥{{item._marketPrice}}</view>
          </view>
        </view>
      </view>

      <view wx:if="{{product && product.length > 11}}" class="item more" @tap="bindMore">
        查看更多
        <view>
          <view class="dot"></view>
          <view class="dot"></view>
          <view class="dot"></view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {connect} from 'wepy-redux';

  import UtilsMixin from '../../../mixins/utils';
  import Title from './title';
  import {actions as ProductActions} from '../../../store/product';


  @connect({
    product(state) { return state.home.recommended },
    store(state) { return state.store.id },
  }, {
    ...ProductActions,
  })


  export default class RecommendBlock extends wepy.component {
    // 首页推荐模块

    components = {
      title: Title,
    };

    mixins = [UtilsMixin];

    computed = {
      _product: () => {
        let _ = [];
        if (this.product)
          _ = this.product.slice(0, 11);
        return _;
      },
    };

    methods = {
      bindMore: () => {
        this.methods.getRecommendedProductListService({
          store: this.store,
          callback: () => {
            this.go2page().navigate('/pages/all/list?view=recommendation');
          },
        });
      },

      bindGetDetail: (url) => {
        this.methods.getDetailService({
          url,
          callback: () => {
            this.go2page().navigate('/pages/all/detail');
          },
        });
      },
    };
  }
</script>
