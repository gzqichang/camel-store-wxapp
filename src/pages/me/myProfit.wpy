<style lang="less">
  @import (reference) "../../config/variables";

  view.page-my-profit {
    .top {
      height: 560rpx;
      margin-bottom: 20rpx;
      border-bottom: 20rpx solid @faintWhite;

      .background {
        width: 100%;
        height: 360rpx;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
      }

      .foreground {
        width: 100%;
        display: flex;
        flex-direction: column;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;

        .head {
          width: 100vw;
          height: 160rpx;
          margin: 0 auto;
          display: flex;
          align-items: center;

          .avatar {
            width: 98rpx;
            height: 98rpx;
            margin-left: 50rpx;
            border: 6rpx solid fadeout(@solidWhite, 40%);
            border-radius: 50%;
          }

          .nickname {
            margin-left: 28rpx;
            color: @solidWhite;
            font-size: 36rpx;
          }

          .wallet {
            color: #ffb3a6;
            font-size: 28rpx;
            position: absolute;
            right: 58rpx;
            display: flex;
            justify-content: center;
            align-items: center;
          }

          .icon {
            width: 32rpx;
            height: 32rpx;
            display: inline-flex;
            position: relative;
            top: 2rpx;
          }
        }

        .panel {
          width: 664rpx;
          height: 360rpx;
          margin: 0 auto;
          background-color: @solidWhite;
          border-radius: 10rpx;
          box-shadow: 0 15rpx 25rpx @dimWhite;
          display: flex;
          flex-direction: column;
          align-items: center;

          .panel-top {
            width: 100%;
            height: 160rpx;
            text-align: center;
            border-bottom: 2rpx solid @faintWhite;
            display: block;

            view:nth-child(1) {
              margin-top: 20rpx;
              color: @textColor1;
              font-size: 30rpx;
            }

            view:nth-child(2) {
              margin-top: 8rpx;
              color: @primaryColor;
              font-size: 48rpx;
              font-weight: bold;
            }
          }

          .panel-bottom {
            width: 100%;
            height: 198rpx;
            display: flex;
            align-items: center;
            justify-content: space-around;

            & > view:nth-child(1) {
              border-right: 2rpx solid @faintWhite;
            }

            & > view {
              width: 50%;
              height: 100%;
              display: flex;
              flex-direction: column;
              align-items: center;
              justify-content: center;

              .money {
                color: @textColor1;
                font-size: 36rpx;
                font-weight: bold;
                display: flex;
              }

              .money-desp {
                width: 100%;
                margin-bottom: 24rpx;
                color: @textColor4;
                font-size: 24rpx;
                text-align: center;
                display: block;
              }
            }
          }

          .gain {
            width: 136rpx;
            height: 46rpx;
            color: @solidWhite;
            font-size: 24rpx;
            background: @primaryColor;
            border-radius: 10rpx;
            display: flex;
            align-items: center;
            justify-content: center;

            &.grey {
              background: @textColor5;
            }

            &.bigger {
              width: 500rpx;
              height: 80rpx;
              font-size: 36rpx;
            }
          }

          .middle {
            height: 220rpx;
            border-bottom: none;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;

            view {
              margin: 0;
            }
          }
        }
      }
    }

    .bottom {
      padding: 0 48rpx;
      background-color: @solidWhite;

      .title {
        width: 100%;
        height: 86rpx;
        color: @textColor1;
        font-size: 32rpx;
        font-weight: bold;
        display: flex;
        align-items: center;
      }

      .hr {
        width: 650rpx;
        height: 2rpx;
        margin: 0 auto;
        background-color: @dimWhite;
      }

      .item {
        max-width: 650rpx;
        height: 126rpx;
        display: flex;
        justify-content: space-around;

        .name {
          width: 400rpx;
          height: 126rpx;
          color: @textColor1;
          text-align: left;
          display: inline-flex;
          align-items: center;
          flex-direction: column;
          flex-grow: 1;

          & > view {
            width: 100%;
            font-size: 28rpx;
            display: flex;
            overflow: hidden;
          }

          & > view:nth-child(1) {
            margin: 24rpx 0 8rpx;
            color: @textColor1;
            white-space: nowrap;

            view {
              max-width: 40vw;
              color: @textColor4;
              display: inline;
              text-overflow: ellipsis;
              overflow: hidden;
            }
          }

          & > view:nth-child(2) {
            color: @textColor3;
          }
        }

        .money {
          color: @primaryColor;
          font-size: 36rpx;
          display: inline-flex;
          align-items: center;

          &.neg {
            color: @textColor1;
          }
        }
      }
    }

    .end {
      margin: 28rpx auto 35rpx;
      color: @textColor4;
      font-size: 24rpx;
      text-align: center;
    }
  }
</style>

<template>
  <view class="page-my-profit">
    <view class="top">
      <image
        class="background"
        src="../../assets/img/me/profitBackground.png"></image>
      <view class="foreground">
        <view class="head">
          <image
            class="avatar"
            src="{{user.avatar_url}}"></image>
          <view class="nickname">
            {{user.nickname}}
          </view>
          <view class="wallet" @tap="bindToggleWalletMask">
            （什么是会员钱包）
            <image
              class="icon"
              src="../../assets/img/me/questionIcon.png"></image>
          </view>
        </view>

        <view class="panel">
          <block wx:if="{{enableDistributionRelations}}">
            <view class="panel-top">
              <view>会员钱包余额(元)</view>
              <view>{{total}}</view>
            </view>
            <view class="panel-bottom">
              <view>
                <view class="money">
                  {{balance}}
                </view>
                <view class="money-desp">
                  充值余额(元)
                </view>
                <view wx:if="{{!isIOS}}" class="gain" @tap="bindGo2TopUp">
                  优惠充值
                </view>
              </view>
              <view>
                <view class="money">
                  {{profit}}
                </view>
                <view class="money-desp">
                  奖励收益(元)
                </view>
                <view class="{{profit > 0 ? 'gain' : 'gain grey'}}" @tap="bindToggleWithdraw">
                  提现
                </view>
              </view>
            </view>
          </block>
          <block wx:else>
            <view class="panel-top middle">
              <view>会员钱包余额(元)</view>
              <view>{{total}}</view>
            </view>
            <view wx:if="{{!isIOS}}" class="gain bigger" @tap="bindGo2TopUp">
              优惠充值
            </view>
          </block>
        </view>
      </view>
    </view>
    <view class="bottom">
      <view class="title">收支记录</view>
      <view class="hr"></view>
      <block wx:key="add_time" wx:for="{{logs}}">
        <view class="item">
          <view class="name">
            <view style="width: calc(100% - 1rem); padding-right: 1rem;">
              {{item.title}}
              <view wx:if="{{item.note}}" style="padding-left: .3rem;">
                ({{item.note}})
              </view>
            </view>
            <view>{{item.date}}</view>
          </view>
          <view class="{{item.negative ? 'money' : 'money neg'}}">
            {{item.money}}
            <view style="font-size: 24rpx">（元）</view>
          </view>
        </view>
        <view class="hr"></view>
      </block>
      <view class="end">已经到底咯~</view>
    </view>

    <!--浮窗-->
    <infoMask :showInfo.sync="showInfo"></infoMask>
    <withdrawMask :showWithdraw.sync="showWithdraw"></withdrawMask>
    <walletMask :show.sync="showWalletMask"></walletMask>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {connect} from 'wepy-redux';

  import UtilsMixin from '../../mixins/utils';
  import PersistenceMixin from '../../mixins/persistence';
  import {actions as UserActions} from '../../store/user';
  import InfoMask from '../../components/me/infoMask';
  import WithdrawMask from '../../components/me/withdrawMask';
  import WalletMask from '../../components/me/walletMask';


  @connect({
    user(state) { return state.user },
    userID(state) { return state.user.id },
    nextURL(state) { return state.others.nextURL },
    enableDistributionRelations(state) { return state.config.enableDistributionRelations },
    isIOS(state) { return state.others.isIOS },
  }, {
    ...UserActions,
  })


  export default class MyProfit extends wepy.page {
    // 我的收益 页面（会员钱包）

    data = {
      showInfo: false,
      showWithdraw: false,
      showWalletMask: false,
    };

    mixins = [UtilsMixin, PersistenceMixin];

    components = {
      infoMask: InfoMask,
      withdrawMask: WithdrawMask,
      walletMask: WalletMask,
    };

    methods = {
      // Toggle Mask Visibility
      bindToggleInfo: () => {
        this.showInfo = !this.showInfo;
        if (!this.showInfo) {
          this.setStorageSync('firstTimeProfit', true);
          this.showWithdraw = true;
        }
        this.$apply();
      },

      bindToggleWithdraw: () => {
        if (this.profit <= 0) return;
        const firstTime = this.getStorageSync('firstTimeProfit');
        if (!firstTime)
          this.showInfo = true;
        else
          this.showWithdraw = !this.showWithdraw;
        this.$apply();
      },

      bindGo2TopUp: () => {
        this.go2page().navigate('/pages/me/topUp');
      },

      bindToggleWalletMask: () => {
        this.showWalletMask = !this.showWalletMask;
      },
    };

    computed = {
      logs: () => {
        let _ = [];
        if (this.user && this.user.accountLog)
          _ = this.user.accountLog;
        return _.map(
          (item) => ({
            title: item.remark,
            note: item.note,
            date: this.parseTime(new Date(item.add_time)),
            money: item.asset,
            add_time: item.add_time,
            negative: /\+/.test(item.asset),
          })
        );
      },

      total: () => {
        let _ = 0;
        if (this.user) {
          const {asset, recharge} = this.user;
          if (asset || recharge)
            _ = asset + recharge;
        }
        return this.parse2Float(_);
      },

      profit: () => {
        return this.user && this.user.asset
          ? this.parse2Float(this.user.asset)
          : 0;
      },

      balance: () => {
        return this.user && this.user.recharge
          ? this.parse2Float(this.user.recharge)
          : 0;
      },
    };

    events = {
      // Reciving events from children components
      toggleInfo: () => {
        this.methods.bindToggleInfo();
      },

      toggleWithdraw: () => {
        this.methods.bindToggleWithdraw();
      },

      toggleWalletMask: () => {
        this.methods.bindToggleWalletMask();
      },
    };

    onShow() {
      // Get log
      if (this.user && this.user.id)
        this.methods.getUserLogService({
          user: this.user.id,
        });

      // Get User Info for the Profit Numbers Updation
      this.methods.getUserInfoService();
    };

    onLoad() {
      this.setTitle('会员钱包');
    };

    onReachBottom() {
      this.getNextPageData();
    }

    getNextPageData = () => {
      let next = this.nextURL.userLogs;
      if (next !== null)
        this.methods.getUserLogService({next});
    };

    /* eslint-disable camelcase */
    onShareAppMessage() {
      const title = this.$parent.globalData.appName || '';
      const uri = this.getCurrentPath();
      const {wx_app_openid} = this.user;
      return {
        title,
        path: `/pages/util/index?scene=${wx_app_openid}&uri=/${uri}`,
      };
    };
  }
</script>
